/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  WhitelistedRole,
  WhitelistedRoleInterface,
} from "../WhitelistedRole";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "WhitelistAdminAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "WhitelistAdminRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "WhitelistedAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "WhitelistedRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addWhitelistAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addWhitelisted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isWhitelistAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isWhitelisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeWhitelisted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceWhitelistAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceWhitelisted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b610305565b600033905090565b61005281600061009860201b6102b91790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167f22380c05984257a1cb900161c713dd71d39e74820f1aea43bd3f1bdd2096129960405160405180910390a250565b6100a8828261014660201b60201c565b156100e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100df906102b4565b60405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156101b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ae906102d4565b60405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600061021b601f836102f4565b91507f526f6c65733a206163636f756e7420616c72656164792068617320726f6c65006000830152602082019050919050565b600061025b6022836102f4565b91507f526f6c65733a206163636f756e7420697320746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600060208201905081810360008301526102cd8161020e565b9050919050565b600060208201905081810360008301526102ed8161024e565b9050919050565b600082825260208201905092915050565b610936806103146000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80634c5a628c1161005b5780634c5a628c146100ea5780637362d9c8146100f4578063bb5f747b14610110578063d6cd9473146101405761007d565b806310154bad14610082578063291d95491461009e5780633af32abf146100ba575b600080fd5b61009c60048036038101906100979190610655565b61014a565b005b6100b860048036038101906100b39190610655565b6101a5565b005b6100d460048036038101906100cf9190610655565b610200565b6040516100e191906107ff565b60405180910390f35b6100f261021d565b005b61010e60048036038101906101099190610655565b61022f565b005b61012a60048036038101906101259190610655565b61028a565b60405161013791906107ff565b60405180910390f35b6101486102a7565b005b61015a610155610361565b61028a565b610199576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101909061087a565b60405180910390fd5b6101a281610369565b50565b6101b56101b0610361565b61028a565b6101f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101eb9061087a565b60405180910390fd5b6101fd816103c3565b50565b600061021682600161041d90919063ffffffff16565b9050919050565b61022d610228610361565b6104e5565b565b61023f61023a610361565b61028a565b61027e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102759061087a565b60405180910390fd5b6102878161053f565b50565b60006102a082600061041d90919063ffffffff16565b9050919050565b6102b76102b2610361565b6103c3565b565b6102c3828261041d565b15610303576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102fa9061081a565b60405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600033905090565b61037d8160016102b990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fee1504a83b6d4a361f4c1dc78ab59bfa30d6a3b6612c403e86bb01ef2984295f60405160405180910390a250565b6103d781600161059990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f270d9b30cf5b0793bbfd54c9d5b94aeb49462b8148399000265144a8722da6b660405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561048e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104859061085a565b60405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6104f981600061059990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f0a8eb35e5ca14b3d6f28e4abf2f128dbab231a58b56e89beb5d636115001e16560405160405180910390a250565b6105538160006102b990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f22380c05984257a1cb900161c713dd71d39e74820f1aea43bd3f1bdd2096129960405160405180910390a250565b6105a3828261041d565b6105e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d99061083a565b60405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008135905061064f816108e9565b92915050565b60006020828403121561066757600080fd5b600061067584828501610640565b91505092915050565b610687816108bd565b82525050565b600061069a601f8361089a565b91507f526f6c65733a206163636f756e7420616c72656164792068617320726f6c65006000830152602082019050919050565b60006106da60218361089a565b91507f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c60008301527f65000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061074060228361089a565b91507f526f6c65733a206163636f756e7420697320746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006107a660408361089a565b91507f57686974656c69737441646d696e526f6c653a2063616c6c657220646f65732060008301527f6e6f742068617665207468652057686974656c69737441646d696e20726f6c656020830152604082019050919050565b6000602082019050610814600083018461067e565b92915050565b600060208201905081810360008301526108338161068d565b9050919050565b60006020820190508181036000830152610853816106cd565b9050919050565b6000602082019050818103600083015261087381610733565b9050919050565b6000602082019050818103600083015261089381610799565b9050919050565b600082825260208201905092915050565b60006108b6826108c9565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6108f2816108ab565b81146108fd57600080fd5b5056fea2646970667358221220536c3b03355814e0ad7a741c83b19871feedfe0a61d50bc0186ff8404d844c6b64736f6c63430008000033";

export class WhitelistedRole__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WhitelistedRole> {
    return super.deploy(overrides || {}) as Promise<WhitelistedRole>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): WhitelistedRole {
    return super.attach(address) as WhitelistedRole;
  }
  connect(signer: Signer): WhitelistedRole__factory {
    return super.connect(signer) as WhitelistedRole__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WhitelistedRoleInterface {
    return new utils.Interface(_abi) as WhitelistedRoleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WhitelistedRole {
    return new Contract(address, _abi, signerOrProvider) as WhitelistedRole;
  }
}
